{"version":3,"sources":["Components/Navigation/SearchInput.jsx","img/logo_transparent.png","img/tmdb-2.svg","Components/Navigation/Navigation.jsx","Components/Filters.jsx","Utils/fetchingQuery.js","Utils/addingMediaType.js","Context/GenresContext.jsx","Components/MovieDetails/Genre.jsx","Context/WatchListContext.jsx","Components/Buttons.jsx","Components/MovieCard/MovieCard.jsx","Components/Layout/Grid.jsx","Components/Layout/MovieList/MovieListLayout.jsx","Components/PageTitle.jsx","Components/Layout/MovieList/MovieList.jsx","Components/Pages/Trending.jsx","Components/Pages/Newest.jsx","Components/Layout/MoviePagination.jsx","Components/Pages/Upcoming.jsx","Components/Pages/Discover/Discover.jsx","Components/Pages/Watchlist.jsx","Components/Pages/Search.jsx","Utils/formatRuntime.js","Components/Layout/MovieDescriptionTab.jsx","Components/MovieDetails/Credits.jsx","Components/MovieDetails/RecommendedTitles.jsx","Components/MovieDetails/MovieDetails.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","searchInput","maxWidth","borderBottom","backgroundColor","borderStyle","fontFamily","fontSize","color","padding","transition","outline","searchBtn","minWidth","minHeight","border","borderRadius","borderColor","searchIconBtn","fill","SearchInput","setOpenMenu","classes","history","useHistory","useState","isError","setIsError","style","display","className","form","onSubmit","event","inputValue","target","value","trim","toLowerCase","regex","RegExp","test","location","pathname","url","URLSearchParams","query","media_type","push","handleSubmit","type","placeholder","Button","variant","disableRipple","menuIcon","position","top","left","zIndex","drawerPaper","width","flexDirection","justifyContent","alignItems","breakpoints","down","navLink","textTransform","list","listItem","typography","fontWeight","icon","marginRight","logo","Navigation","navTabsIcons","openMenu","useTheme","mediumBp","useMediaQuery","Fab","visibility","opacity","onClick","height","flex","Drawer","open","onClose","paper","CardMedia","component","alt","image","Logo","List","map","tab","index","to","activeStyle","ListItem","button","Icon","Typography","TmdbLogo","formControl","margin","spacing","selectEmpty","marginTop","fetcher","fetch","then","res","json","fetchingQuery","process","addingMediaType","data","mediaType","modifiedDataObj","forEach","obj","Object","assign","GenresContext","createContext","GenresContextProvider","children","useSWR","moviesGenreObj","moviesError","error","showsGenreObj","showsError","moviesGenres","genres","showsGenres","Provider","Genre","genreIds","filteredGenres","setFilteredGenres","useContext","useEffect","filter","genre","some","titleGenres","id","Container","textOverflow","overflow","whiteSpace","lineHeight","wordSpacing","sortedGenresArr","g","name","sort","join","getGenres","WatchListContext","WatchListContextProvider","props","initialList","JSON","parse","localStorage","getItem","setList","setItem","stringify","notificationsOptions","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","addItem","movie","mediaTitle","title","toast","success","textAlign","prev","removeItem","warn","item","backToTopBtn","bottom","right","cursor","boxShadow","backToTopIcon","watchListSmallBtn","watchListIcon","watchListLargeInactiveBtn","watchListLargeActiveBtn","BackToTopBtn","showBtn","setShowBtn","document","onscroll","e","scrollFromTop","scrollingElement","scrollTop","Slide","direction","in","mountOnEnter","unmountOnExit","window","scrollTo","behavior","WatchListBtn","checkId","IconButton","stroke","strokeWidth","root","justifyItems","cardActionArea","img","aspectRatio","cardContent","paragraph","score","borderWidth","scoreFont","MovieCard","poster_path","vote_average","genre_ids","movieImage","useRouteMatch","normalizedTitle","replace","urlPath","Card","state","CardActionArea","Paper","effect","src","threshold","CardContent","GridContainer","smallBp","Grid","container","justify","GridItem","xs","sm","md","lg","gridTemplateColumns","paddingTop","btn","MovieList","sectionTitle","getShowMore","setGetShowMore","includes","slice","val","Set","handleBtn","PageTitle","pageTitle","moviesQuery","showsQuery","search","searchParams","entries","key","isMovie","isTv","paramsStr","tv","createSearchParams","toString","moviesData","showsData","css","size","checkMediaType","fetchedData","results","hasOwnProperty","Trending","Newest","MoviePagination","tr","ml","media","setSize","totalResults","overflowX","dataLength","length","next","hasMore","loader","endMessage","override","Upcoming","useSWRInfinite","isValidating","mutate","newMovies","minimumDateMovie","Date","dates","minimum","release_date","filteringDates","Discover","mediaQuery","filterQuery","isMovies","useRef","movies","tvShows","element","total_results","Watchlist","Search","searchedQuery","get","React","tabsValue","setTabsValue","errorMovies","setMoviesSize","errorTvShows","setTvShowsSize","totalMoviesResults","totalTvShowsResult","searchedMovieData","searchedTvShowsData","tabComp","tabName","gap","toUpperCase","Tabs","onChange","console","log","set","indicatorColor","textColor","centered","Tab","label","formatRuntime","rt","m","h","hour","Math","trunc","minutes","GridContainerTab","GridItemTab","poster","itemWrapper","maxHeight","content","alignSelf","marginLeft","Credits","filterMediaType","creditsData","creditsError","cast","actor","profile_path","character","RecommendedTitles","fromTitle","recommendedTitles","testLength","gridItem","gridItemDetails","overview","columnCount","columnFill","columnGap","videPlayer","tabs","marginBottom","MovieDetails","match","params","callType","mediaData","mediaError","videosData","videosError","original_title","backdrop_path","runtime","modifiedMediaData","date","movieBg","videos","makeVideoUrlArr","v","videosURL","video","tabsComponents","objectFit","objectPosition","background","split","reverse","first_air_date","next_episode_to_air","air_date","last_air_date","number_of_seasons","number_of_episodes","episode_run_time","splice","controls","preventDefault","createMuiTheme","htmlFontSize","responsiveFontSizes","App","autoClose","rtl","pauseOnFocusLoss","limit","basename","flexGrow","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3bec1779.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\n// Material-Ui\r\nimport { Button, makeStyles, Input } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n// import { Label } from \"@material-ui/icons\";\r\n// import blue from \"@material-ui/core/colors/blue\";\r\n\r\n// Styles\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchInput: {\r\n    maxWidth: \"10rem\",\r\n\r\n    borderBottom: \"1px solid\",\r\n    backgroundColor: \"transparent\",\r\n    borderStyle: \"none\",\r\n\r\n    fontFamily: \"inherit\",\r\n    fontSize: \"1rem\",\r\n    color: \"white\",\r\n\r\n    padding: \".5rem .2rem\",\r\n\r\n    transition: \"border-color .2s ease-in\",\r\n\r\n    \"&:focus\": {\r\n      outline: 0,\r\n    },\r\n  },\r\n\r\n  searchBtn: {\r\n    minWidth: \"45px\",\r\n    minHeight: \"35px\",\r\n    border: \"1px solid white\",\r\n    borderRadius: \"0 5px 5px 0\",\r\n    backgroundColor: \"transparent\",\r\n    padding: 0,\r\n\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(255,255,255, .2)\",\r\n      borderColor: \"white\",\r\n    },\r\n  },\r\n\r\n  searchIconBtn: {\r\n    fontSize: \"2rem\",\r\n    padding: \".2rem \",\r\n    fill: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function SearchInput({ setOpenMenu }) {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    // event.preventDefault();\r\n\r\n    const inputValue = event.target[0].value.trim().toLowerCase();\r\n\r\n    // Input validation\r\n    const regex = new RegExp(\"[A-Za-z0-9]\");\r\n\r\n    if (!regex.test(inputValue)) return setIsError(true);\r\n\r\n    // Reset URL pathname\r\n    history.location.pathname = \"/\";\r\n\r\n    // Construct URL\r\n    const url = new URLSearchParams({\r\n      query: inputValue,\r\n      media_type: \"movie\",\r\n    });\r\n    history.push(`search?${url}`);\r\n\r\n    // Closing navigation\r\n    setOpenMenu(false);\r\n\r\n    // Reset input value\r\n    if (regex.test(inputValue)) {\r\n      setIsError(false);\r\n      return (event.target[0].value = \"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <form className={classes.form} onSubmit={(event) => handleSubmit(event)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search a title\"\r\n          style={\r\n            isError ? { borderColor: \"#900603\" } : { borderColor: \"white\" }\r\n          }\r\n          className={classes.searchInput}\r\n        />\r\n\r\n        <Button\r\n          style={\r\n            isError ? { borderColor: \"#900603\" } : { borderColor: \"white\" }\r\n          }\r\n          className={classes.searchBtn}\r\n          variant=\"outlined\"\r\n          type=\"submit\"\r\n          color=\"secondary\"\r\n          disableRipple\r\n        >\r\n          <SearchIcon\r\n            style={isError ? { fill: \"#900603\" } : { fill: \"white\" }}\r\n            className={classes.searchIconBtn}\r\n          />\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo_transparent.41790b04.png\";","export default __webpack_public_path__ + \"static/media/tmdb-2.de1a664e.svg\";","import React, { useState } from \"react\";\r\n\r\n// Components\r\nimport SearchInput from \"./SearchInput\";\r\n\r\n// Router\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//Material-Ui\r\n\r\nimport {\r\n  Drawer,\r\n  CardMedia,\r\n  List,\r\n  ListItem,\r\n  Icon,\r\n  Fab,\r\n  makeStyles,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\n// Logo\r\nimport Logo from \"../../img/logo_transparent.png\";\r\nimport TmdbLogo from \"../../img/tmdb-2.svg\";\r\n// === Icons ===\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\n// ==== Navigation style ====\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuIcon: {\r\n    position: \"fixed\",\r\n    top: \"2rem\",\r\n    left: \"2rem\",\r\n\r\n    transition: \"opacity .2s ease-in-out\",\r\n\r\n    zIndex: 20000,\r\n    // [theme.breakpoints.down(\"sm\")]: {\r\n    //   top: \"50%\",\r\n    //   left: \"-15px\",\r\n    //   borderRadius: \"15px 15px\",\r\n    // },\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: \"357px\",\r\n    // minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    border: \"none\",\r\n    // overflowX: \"hidden\",\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      minWidth: \"300px\",\r\n      maxWidth: \"40%\",\r\n      width: \"40%\",\r\n      backgroundColor: \"#202B34\",\r\n    },\r\n  },\r\n\r\n  navLink: {\r\n    width: \"100%\",\r\n\r\n    textTransform: \"capitalize\",\r\n    color: \"rgba(255, 255, 255, 0.5)\",\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n  },\r\n  listItem: {\r\n    display: \"flex\",\r\n    padding: \"1.5rem 25%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: \".8rem 25%\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \".5rem 25%\",\r\n    },\r\n  },\r\n\r\n  typography: {\r\n    fontWeight: 100,\r\n  },\r\n  icon: {\r\n    marginRight: \"1.3rem\",\r\n    fontSize: \"2rem\",\r\n    fill: \"rgba(255, 255, 255, 0.5)\",\r\n  },\r\n\r\n  logo: {\r\n    width: \"9rem\",\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"10rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Navigation() {\r\n  const classes = useStyles();\r\n  const navTabs = [\"trending\", \"newest\", \"upcoming\", \"discover\", \"watchlist\"];\r\n  const navTabsIcons = [\r\n    \"trending_up\",\r\n    \"theaters\",\r\n    \"arrow_upward\",\r\n    \"movie_filter\",\r\n    \"star\",\r\n    \"settings\",\r\n  ];\r\n\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  const theme = useTheme();\r\n  const mediumBp = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <>\r\n      {mediumBp && (\r\n        <Fab\r\n          className={classes.menuIcon}\r\n          style={\r\n            openMenu\r\n              ? { visibility: \"hidden\", opacity: \"0\" }\r\n              : { visibility: \"visible\", opacity: \"1\" }\r\n          }\r\n          color=\"primary\"\r\n          onClick={() => setOpenMenu(true)}\r\n        >\r\n          <MenuIcon />\r\n        </Fab>\r\n      )}\r\n      <nav\r\n        style={\r\n          mediumBp ? { minWidth: 0 } : { height: \"100vh\", flex: \"0 0 350px\" }\r\n        }\r\n      >\r\n        <Drawer\r\n          open={openMenu}\r\n          onClose={() => setOpenMenu(false)}\r\n          variant={mediumBp ? \"temporary\" : \"permanent\"}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <CardMedia\r\n            className={classes.logo}\r\n            component=\"img\"\r\n            alt=\"Logo\"\r\n            image={Logo}\r\n          />\r\n\r\n          <SearchInput setOpenMenu={setOpenMenu} />\r\n\r\n          <List className={classes.list}>\r\n            {navTabs.map((tab, index) => {\r\n              return (\r\n                <NavLink\r\n                  key={index}\r\n                  to={`/${tab}`}\r\n                  activeStyle={{\r\n                    color: \"white\",\r\n                    fill: \"white\",\r\n                  }}\r\n                  className={classes.navLink}\r\n                  onClick={() => setOpenMenu(false)}\r\n                >\r\n                  <ListItem button className={classes.listItem}>\r\n                    <Icon className={classes.icon}>{navTabsIcons[index]}</Icon>\r\n                    <Typography variant=\"h4\" className={classes.typography}>\r\n                      {tab}\r\n                    </Typography>\r\n                  </ListItem>\r\n                </NavLink>\r\n              );\r\n            })}\r\n          </List>\r\n          <CardMedia\r\n            className={classes.logo}\r\n            component=\"img\"\r\n            alt=\"The movie data base logo\"\r\n            image={TmdbLogo}\r\n          />\r\n        </Drawer>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Material-Ui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    borderColor: \"white\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst genres = [\r\n  { id: 10759, name: \"Action\" },\r\n  { id: 16, name: \"Animation\" },\r\n  { id: 35, name: \"Comedy\" },\r\n  { id: 80, name: \"Crime\" },\r\n  { id: 99, name: \"Documentary\" },\r\n  { id: 18, name: \"Drama\" },\r\n  { id: 10751, name: \"Family\" },\r\n  { id: 10762, name: \"Kids\" },\r\n  { id: 9648, name: \"Mystery\" },\r\n  { id: 10763, name: \"News\" },\r\n  { id: 10764, name: \"Reality\" },\r\n  { id: 10766, name: \"Soap\" },\r\n  { id: 10767, name: \"Talk\" },\r\n  { id: 37, name: \"Western\" },\r\n  { id: 28, name: \"Action\" },\r\n  { id: 12, name: \"Adventure\" },\r\n  { id: 14, name: \"Fantasy\" },\r\n  { id: 36, name: \"History\" },\r\n  { id: 27, name: \"Horror\" },\r\n  { id: 10402, name: \"Music\" },\r\n  { id: 10749, name: \"Romance\" },\r\n  { id: 878, name: \"Sci-Fi\" },\r\n  { id: 10770, name: \"TV\" },\r\n  { id: 53, name: \"Thriller\" },\r\n  { id: 10752, name: \"War\" },\r\n  { id: 37, name: \"Western\" },\r\n];\r\n\r\nconst Filters = ({\r\n  isMovies,\r\n  // setIsMovies,\r\n  // sorting,\r\n  // setSorting,\r\n  // voteAverage,\r\n  // setVoteAverage,\r\n  // yearFilter,\r\n  // setYearFilter,\r\n  // genresIds,\r\n  // setGenresIds,\r\n  // refContainer,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  function createVoteCount() {\r\n    const count = [];\r\n\r\n    for (let i = 10; i >= 1; i--) {\r\n      count.push(i);\r\n    }\r\n    return count;\r\n  }\r\n\r\n  // Year filter\r\n  const yearsFilter = () => {\r\n    const startYear = 1800;\r\n    const endYear = new Date().getFullYear();\r\n    const years = [];\r\n    for (let i = endYear; i > startYear; i--) {\r\n      years.push(i);\r\n    }\r\n\r\n    return years;\r\n  };\r\n\r\n  // Filter Genres\r\n\r\n  // const handleGenreIds = (arr) => {\r\n  //   arr.forEach(\r\n  //     (obj, index) =>\r\n  //       (refContainer.current = [...new Set([...refContainer.current, obj])])\r\n  //   );\r\n  // };\r\n\r\n  // const handleGenresOnClose = () => {\r\n  //   setGenresIds(refContainer.current);\r\n  // };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-evenly\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"media-type\" style={{ color: \"white\" }}>\r\n          Media type\r\n        </InputLabel>\r\n        <NativeSelect\r\n          labelid=\"media-type\"\r\n          id=\"media-type-select\"\r\n          variant=\"standard\"\r\n          // value={isMovies}\r\n          style={{ color: \"white\" }}\r\n          // onChange={(event) => setIsMovies(event.target.value)}\r\n        >\r\n          <option value={true}>Movies</option>\r\n          <option value={false}>Tv Shows</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"sort-by\" style={{ color: \"white\" }}>\r\n          Sort By\r\n        </InputLabel>\r\n        <NativeSelect\r\n          labelid=\"sort-by\"\r\n          id=\"sort-by-select\"\r\n          variant=\"standard\"\r\n          // value={sorting}\r\n          style={{ color: \"white\" }}\r\n          // onChange={(event) => setSorting(event.target.value)}\r\n        >\r\n          <option value={\"popularity.desc\"}>Popularity High</option>\r\n          <option value={\"popularity.asc\"}>Popularity Low</option>\r\n          <option value={\"release_date.desc\"}>Release Date Newer</option>\r\n          <option value={\"release_date.asc\"}>Release Date Older</option>\r\n          <option value={\"vote_average.desc\"}>Vote Average High</option>\r\n          <option value={\"vote_average.asc\"}>Vote Average Low</option>\r\n          <option value={\"vote_count.desc\"}>Vote Count High</option>\r\n          <option value={\"vote_count.asc\"}>Vote Count Low</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"vote-average\" style={{ color: \"white\" }}>\r\n          Vote Average\r\n        </InputLabel>\r\n        <NativeSelect\r\n          labelid=\"vote-average\"\r\n          id=\"vote-average-select\"\r\n          variant=\"standard\"\r\n          // value={voteAverage}\r\n          style={{ color: \"white\" }}\r\n          // onChange={(obj, event, str) => setVoteAverage(event.props.value)}\r\n        >\r\n          {createVoteCount().map((number, index) => (\r\n            <option key={index} value={number}>\r\n              {number}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel>Select By Year</InputLabel>\r\n\r\n        <Select\r\n          labelid=\"select-by-year\"\r\n          id=\"select-by-year-select\"\r\n          variant=\"standard\"\r\n          multiple\r\n          // value={yearFilter}\r\n          style={{ color: \"white\" }}\r\n          // onChange={(obj, event) => setYearFilter(event.props.value)}\r\n        >\r\n          {/* <option value={0}>All</option> */}\r\n          {yearsFilter().map((year, index) => (\r\n            <MenuItem key={index} value={year}>\r\n              {year}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Autocomplete\r\n        disableCloseOnSelect\r\n        autoSelect\r\n        // autoComplete\r\n        includeInputInList\r\n        multiple={true}\r\n        limitTags={2}\r\n        id=\"multiple-limit-tags\"\r\n        options={genres}\r\n        getOptionLabel={(option) => option.name}\r\n        // defaultValue={[genres[2], genres[1]]}\r\n        // getOptionSelected={(opt, val) => {\r\n        //   console.log(\"option \", opt);\r\n        //   console.log(\"value \", val);\r\n        // }}\r\n        // filterOptions={(opt, state) => {\r\n        //   console.log(\"option \", opt);\r\n        //   console.log(\"state \", state);\r\n        // }}\r\n        // onClose={() => {\r\n        //   handleGenresOnClose();\r\n        // }}\r\n        // value={genresIds}\r\n        // onChange={(e, value) => handleGenreIds(value)}\r\n        // onInputChange={(ev, val, res) => handleGenreIds(val)}\r\n        // blurOnSelect\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"limitTags\"\r\n            placeholder=\"Favorites\"\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","export const fetcher = (...args) => fetch(...args).then((res) => res.json());\r\n\r\nexport default function fetchingQuery(query) {\r\n  const API_KEY = process.env.REACT_APP_API_KEY;\r\n  const API_URL = `https://api.themoviedb.org/3/${query}?api_key=${API_KEY}`;\r\n\r\n  return API_URL;\r\n}\r\n","export default function addingMediaType(data, mediaType) {\r\n  let modifiedDataObj = [];\r\n\r\n  //Injecting property\r\n  data.forEach((obj) => {\r\n    modifiedDataObj.push(\r\n      Object.assign({}, obj, {\r\n        media_type: `${mediaType}`,\r\n      })\r\n    );\r\n  });\r\n\r\n  return modifiedDataObj;\r\n}\r\n","import React, { useMemo, createContext } from \"react\";\r\n\r\n// Utils\r\nimport useSWR from \"swr\";\r\nimport fetchingQuery, { fetcher } from \"../Utils/fetchingQuery\";\r\n\r\nexport const GenresContext = createContext();\r\n\r\nconst GenresContextProvider = ({ children }) => {\r\n  const moviesQuery = `genre/movie/list`;\r\n  const showsQuery = `genre/tv/list`;\r\n\r\n  const { data: moviesGenreObj, error: moviesError } = useSWR(\r\n    fetchingQuery(moviesQuery),\r\n    fetcher\r\n  );\r\n  const { data: showsGenreObj, error: showsError } = useSWR(\r\n    fetchingQuery(showsQuery),\r\n    fetcher\r\n  );\r\n\r\n  if (!moviesGenreObj || !showsGenreObj) return <h2>Loading...</h2>;\r\n  if (moviesError || showsError) return <h2>Error!!!</h2>;\r\n\r\n  const moviesGenres = moviesGenreObj.genres;\r\n  const showsGenres = showsGenreObj.genres;\r\n\r\n  return (\r\n    <GenresContext.Provider value={{ moviesGenres, showsGenres }}>\r\n      {children}\r\n    </GenresContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GenresContextProvider;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n//Context\r\nimport { GenresContext } from \"../../Context/GenresContext\";\r\n\r\n// Material-Ui\r\nimport { Container, Typography } from \"@material-ui/core\";\r\n\r\nexport default function Genre({ genreIds, mediaType }) {\r\n  const [filteredGenres, setFilteredGenres] = useState([]);\r\n\r\n  const { moviesGenres, showsGenres } = useContext(GenresContext);\r\n\r\n  const genres = mediaType === \"movie\" ? moviesGenres : showsGenres;\r\n\r\n  useEffect(() => {\r\n    setFilteredGenres(\r\n      genres.filter((genre) =>\r\n        genreIds.some(\r\n          (titleGenres) =>\r\n            genre.id === titleGenres || genre.id === titleGenres.id\r\n        )\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  function getGenres() {\r\n    const sortedGenresArr = [];\r\n    filteredGenres.forEach((g) => sortedGenresArr.push(g.name));\r\n\r\n    return sortedGenresArr.sort().join(\" \");\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Typography\r\n        style={{\r\n          textOverflow: \"ellipsis\",\r\n          overflow: \"hidden\",\r\n          whiteSpace: \"nowrap\",\r\n          color: \"#adb5bd\",\r\n          fontSize: \"12px\",\r\n          lineHeight: \"25px\",\r\n          wordSpacing: \".5ch\",\r\n\r\n          fontWeight: 100,\r\n        }}\r\n      >\r\n        {getGenres()}\r\n      </Typography>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n// React toastify\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nexport const WatchListContext = createContext();\r\n\r\nexport default function WatchListContextProvider(props) {\r\n  // Get list from local storage\r\n  const initialList =\r\n    JSON.parse(localStorage.getItem(\"movie-list_watchlist\")) || [];\r\n\r\n  const [list, setList] = useState(initialList);\r\n\r\n  // Save list to local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"movie-list_watchlist\", JSON.stringify(list));\r\n  }, [list]);\r\n\r\n  // Toast notification options\r\n  const notificationsOptions = {\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  };\r\n\r\n  // Context state actions\r\n  const addItem = (movie) => {\r\n    const mediaTitle = movie.title || movie.name;\r\n\r\n    toast.success(\r\n      <p style={{ textAlign: \"center\" }}>\r\n        <b>{mediaTitle}</b> has been added to Watch List\r\n      </p>,\r\n      notificationsOptions\r\n    );\r\n\r\n    setList((prev) => [...prev, movie]);\r\n  };\r\n\r\n  const removeItem = (movie) => {\r\n    const mediaTitle = movie.title || movie.name;\r\n\r\n    toast.warn(\r\n      <p style={{ textAlign: \"center\" }}>\r\n        <b>{mediaTitle}</b> has been removed from Watch List\r\n      </p>,\r\n      notificationsOptions\r\n    );\r\n\r\n    setList(list.filter((item) => item.id !== movie.id));\r\n  };\r\n\r\n  return (\r\n    <WatchListContext.Provider value={{ list, addItem, removeItem }}>\r\n      {props.children}\r\n    </WatchListContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\n// Context\r\nimport { WatchListContext } from \"../Context/WatchListContext\";\r\n\r\n// Material-Ui\r\nimport { Button, IconButton, Slide } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// Material-Ui Icons\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\n\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // Back to top button styles\r\n  backToTopBtn: {\r\n    minWidth: \"70px\",\r\n    minHeight: \"70px\",\r\n    borderRadius: \"50%\",\r\n    position: \"fixed\",\r\n    bottom: \"5rem\",\r\n    right: \"5rem\",\r\n    zIndex: \"10000\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"rgb(58, 165, 170)\",\r\n    transition: \"none\",\r\n    boxShadow: \"0 1px 15px 1px rgba(0, 0, 0, .5)\",\r\n\r\n    \"&:hover\": {\r\n      boxShadow: \"0 1px 15px 3px rgba(0, 0, 0, .9)\",\r\n      backgroundColor: \"rgb(64, 191, 198)\",\r\n    },\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minWidth: \"60px\",\r\n      minHeight: \"60px\",\r\n      bottom: \"2rem\",\r\n      right: \"2rem\",\r\n    },\r\n  },\r\n\r\n  backToTopIcon: {\r\n    fontSize: \"2.5rem\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n  },\r\n\r\n  // Add to watch list button styles\r\n\r\n  watchListSmallBtn: {\r\n    width: \"15%\",\r\n    height: \"7.2%\",\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    left: \"10px\",\r\n    zIndex: \"500\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"5px\",\r\n      left: \"5px\",\r\n    },\r\n  },\r\n\r\n  watchListIcon: {\r\n    fontSize: \"3.5rem\",\r\n    opacity: \".8\",\r\n    transition: \"opacity .2s ease\",\r\n\r\n    \"&:hover\": {\r\n      opacity: \"1\",\r\n    },\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"2.3rem\",\r\n    },\r\n  },\r\n\r\n  watchListLargeInactiveBtn: {\r\n    width: \"fit-content\",\r\n    borderColor: \"rgb(255,147,79)\",\r\n    color: \"rgb(255,147,79)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(255,147,79)\",\r\n      borderColor: \"rgb(255,147,79)\",\r\n      color: \"rgb(255,255,255)\",\r\n    },\r\n  },\r\n  watchListLargeActiveBtn: {\r\n    width: \"fit-content\",\r\n    backgroundColor: \"rgb(255,147,79)\",\r\n    borderColor: \"rgb(255,147,79)\",\r\n    color: \"rgb(255,255,255)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(247, 108, 20)\",\r\n      borderColor: \"rgb(247, 108, 20)\",\r\n      color: \"rgb(255,255,255)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst BackToTopBtn = () => {\r\n  const classes = useStyles();\r\n\r\n  const [showBtn, setShowBtn] = useState(false);\r\n\r\n  document.onscroll = (e) => {\r\n    const scrollFromTop = e.target.scrollingElement.scrollTop;\r\n\r\n    if (scrollFromTop > 600) return setShowBtn(true);\r\n    return setShowBtn(false);\r\n  };\r\n\r\n  return (\r\n    <Slide direction=\"up\" in={showBtn} mountOnEnter unmountOnExit>\r\n      <Button\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n        className={classes.backToTopBtn}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        <ArrowUpwardIcon className={classes.backToTopIcon} fontSize=\"large\" />\r\n      </Button>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nconst WatchListBtn = ({ movie, type }) => {\r\n  const classes = useStyles();\r\n  const { list, addItem, removeItem } = useContext(WatchListContext);\r\n\r\n  const checkId = list.some((item) => item.id === movie.id);\r\n\r\n  if (type === \"large\")\r\n    return (\r\n      <Button\r\n        onClick={checkId ? () => removeItem(movie) : () => addItem(movie)}\r\n        variant={checkId ? \"contained\" : \"outlined\"}\r\n        className={\r\n          checkId\r\n            ? classes.watchListLargeActiveBtn\r\n            : classes.watchListLargeInactiveBtn\r\n        }\r\n      >\r\n        {checkId ? \"Remove from watch list\" : \"Add to watch list\"}\r\n      </Button>\r\n    );\r\n\r\n  if (type === \"small\")\r\n    return (\r\n      <IconButton\r\n        onClick={checkId ? () => removeItem(movie) : () => addItem(movie)}\r\n        className={classes.watchListSmallBtn}\r\n      >\r\n        <BookmarkIcon\r\n          className={classes.watchListIcon}\r\n          style={\r\n            checkId\r\n              ? {\r\n                  fill: \"rgb(255,147,79)\",\r\n\r\n                  opacity: \"1\",\r\n                }\r\n              : {\r\n                  stroke: \"rgb(255,147,79)\",\r\n                  strokeWidth: \"1.5px\",\r\n                  fill: \"transparent\",\r\n                }\r\n          }\r\n        />\r\n      </IconButton>\r\n    );\r\n};\r\n\r\nexport { BackToTopBtn, WatchListBtn };\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Genre from \"../MovieDetails/Genre\";\r\nimport { WatchListBtn } from \"../Buttons\";\r\n\r\n//Context\r\nimport GenresContextProvider from \"../../Context/GenresContext\";\r\n\r\n// Lazy img load\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\n// Material-Ui\r\nimport {\r\n  makeStyles,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\n// Style\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyItems: \"flex-start\",\r\n\r\n    border: 0,\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"3px 3px 10px 2px rgba(0,0,0, .2)\",\r\n  },\r\n  cardActionArea: {\r\n    height: \"100%\",\r\n    transition: \"all .2s ease\",\r\n    zIndex: \"200\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(255,255,255,.2)\",\r\n    },\r\n  },\r\n  img: {\r\n    aspectRatio: \"2/3\",\r\n  },\r\n  cardContent: {\r\n    minHeight: \"70px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n\r\n    textAlign: \"center\",\r\n    margin: \".2rem 0\",\r\n    padding: \"0 .4rem\",\r\n  },\r\n  title: {\r\n    padding: \"0 .5rem\",\r\n\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \".5rem .2rem\",\r\n    },\r\n  },\r\n  paragraph: {\r\n    color: \"#fff\",\r\n    lineHeight: \"1.5rem\",\r\n  },\r\n\r\n  score: {\r\n    width: \"38px\",\r\n    height: \"38px\",\r\n    padding: \".2rem\",\r\n\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    right: \"10px\",\r\n\r\n    borderWidth: \"3px\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: \"50%\",\r\n    color: \"white\",\r\n    backgroundColor: `rgba(0,0,0, .9)`,\r\n    boxShadow: \"0 0 5px 2px rgba(0,0,0,.4)\",\r\n\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    zIndex: \"100\",\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"35px\",\r\n      height: \"35px\",\r\n\r\n      top: \"7px\",\r\n      right: \"7px\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"2px\",\r\n      right: \"2px\",\r\n\r\n      borderWidth: \"2px\",\r\n\r\n      width: \"30px\",\r\n      height: \"30px\",\r\n    },\r\n  },\r\n  scoreFont: {\r\n    fontSize: \".9rem\",\r\n    fontWeight: 700,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \".8rem\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \".7rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const classes = useStyles();\r\n\r\n  const { id, poster_path, vote_average, media_type } = movie;\r\n\r\n  const title = movie.title || movie.name;\r\n  const genreIds = movie.genre_ids || movie.genres;\r\n\r\n  const movieImage = poster_path\r\n    ? `https://image.tmdb.org/t/p/w200/${poster_path}`\r\n    : `https://www.translationvalley.com/wp-content/uploads/2020/03/no-iamge-placeholder.jpg`;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  // Creating URL path\r\n  const normalizedTitle = title.replace(/\\s/g, \"+\");\r\n  const urlPath = `${media_type}/${id}/${normalizedTitle}`;\r\n\r\n  // Adding color to score\r\n  function scoreBg(score) {\r\n    if (score < 1) return \"white\";\r\n    if (score >= 8) return \"green\";\r\n    if (score > 5) return \"orange\";\r\n    if (score <= 5) return \"red\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <WatchListBtn movie={movie} type=\"small\" />\r\n        <Link\r\n          to={{\r\n            pathname: `${url === \"/\" ? \"/trending\" : url}/${urlPath}`,\r\n\r\n            state: {\r\n              id: id,\r\n              mediaType: media_type,\r\n            },\r\n          }}\r\n        >\r\n          <CardActionArea className={classes.cardActionArea}>\r\n            <Paper\r\n              className={classes.score}\r\n              style={{\r\n                borderColor: `${scoreBg(vote_average)}`,\r\n              }}\r\n            >\r\n              <Typography variant=\"caption\" className={classes.scoreFont}>\r\n                {vote_average < 1 ? \"N/A\" : vote_average}\r\n              </Typography>\r\n            </Paper>\r\n            <LazyLoadImage\r\n              className={classes.img}\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n              effect=\"blur\"\r\n              alt={`${title} poster`}\r\n              src={movieImage}\r\n              threshold={400}\r\n            />\r\n\r\n            <CardContent className={classes.cardContent}>\r\n              <Typography variant=\"h5\" className={classes.title}>\r\n                {title}\r\n              </Typography>\r\n              <GenresContextProvider>\r\n                <Genre genreIds={genreIds} mediaType={media_type} />\r\n              </GenresContextProvider>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Link>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\n\r\n// Material-Ui\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\n\r\nconst GridContainer = ({ children }) => {\r\n  const smallBp = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n  return (\r\n    <Grid container spacing={smallBp ? 1 : 2} justify=\"flex-start\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst GridItem = ({ children, index }) => {\r\n  return (\r\n    <Grid item xs={4} sm={3} md={3} lg={2} key={index}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport { GridContainer, GridItem };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Components\r\nimport MovieCard from \"../../MovieCard/MovieCard\";\r\nimport { GridContainer, GridItem } from \"../Grid\";\r\n\r\n// Material-Ui\r\nimport { makeStyles, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(15, 1fr)\",\r\n  },\r\n  container: {\r\n    padding: \"0 .5rem\",\r\n    paddingTop: \"1rem\",\r\n    minHeight: \"50vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  btn: {\r\n    width: \"15%\",\r\n    margin: \"1.5rem auto\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      padding: \".5rem 0\",\r\n    },\r\n  },\r\n}));\r\n\r\n// TODO show more for both media types\r\n\r\nexport default function MovieList({\r\n  data,\r\n  sectionTitle,\r\n  getShowMore,\r\n  setGetShowMore,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const mediaType = data[0].media_type;\r\n\r\n  const handleBtn = (event) => {\r\n    const value = event.target.value;\r\n\r\n    if (!getShowMore.includes(value)) {\r\n      return setGetShowMore((prev) => [...new Set([...prev, value])]);\r\n    }\r\n    return setGetShowMore((prev) => prev.filter((val) => val !== value));\r\n  };\r\n\r\n  return (\r\n    <section className={classes.container}>\r\n      {/* TODO change h1 to typography */}\r\n      <h1>{sectionTitle}</h1>\r\n\r\n      <GridContainer>\r\n        {getShowMore.includes(mediaType)\r\n          ? data.map((movie) => {\r\n              return (\r\n                <GridItem key={movie.id}>\r\n                  <MovieCard movie={movie} />\r\n                </GridItem>\r\n              );\r\n            })\r\n          : data\r\n              .map((movie) => {\r\n                return (\r\n                  <GridItem key={movie.id}>\r\n                    <MovieCard movie={movie} />\r\n                  </GridItem>\r\n                );\r\n              })\r\n              .slice(0, 6)}\r\n      </GridContainer>\r\n\r\n      {/* TODO make btn responsive */}\r\n      <button\r\n        value={mediaType}\r\n        className={classes.btn}\r\n        onClick={(event) => handleBtn(event)}\r\n      >\r\n        {getShowMore.includes(mediaType)\r\n          ? `Show less ${mediaType === \"movie\" ? \"Movies\" : \"Tv shows\"}`\r\n          : `Show more ${mediaType === \"movie\" ? \"Movies\" : \"Tv shows\"}`}\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Material Ui\r\nimport { useMediaQuery, Typography } from \"@material-ui/core\";\r\n\r\nexport default function PageTitle({ pageTitle }) {\r\n  const mediumBp = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n  const smallBp = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <Typography\r\n      variant=\"h1\"\r\n      style={\r\n        mediumBp\r\n          ? { display: \"flex\", justifyContent: \"center\", margin: \"2.5rem 0\" }\r\n          : { display: \"none\" }\r\n      }\r\n    >\r\n      {pageTitle}\r\n    </Typography>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Utils\r\nimport useSWR from \"swr\";\r\nimport fetchingQuery, { fetcher } from \"../../../Utils/fetchingQuery\";\r\nimport addingMediaType from \"../../..//Utils/addingMediaType\";\r\n\r\n// Components\r\nimport MovieListLayout from \"./MovieListLayout\";\r\nimport PageTitle from \"../../PageTitle\";\r\n\r\n// Spinner\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\n\r\nexport default function MovieList(props) {\r\n  const { moviesQuery, showsQuery, pageTitle } = props;\r\n\r\n  // Change document title\r\n  document.title = `${pageTitle}`;\r\n\r\n  const history = useHistory();\r\n  const location = history.location.pathname;\r\n\r\n  const [getShowMore, setGetShowMore] = useState(\"\");\r\n\r\n  // Set previous search params\r\n  useEffect(() => {\r\n    const query = history.location.search;\r\n\r\n    const searchParams = new URLSearchParams(query);\r\n\r\n    for (let type of searchParams.entries()) {\r\n      const key = type[0];\r\n      const value = JSON.parse(type[1]);\r\n\r\n      if (value) setGetShowMore((prev) => [...new Set([...prev, key])]);\r\n    }\r\n  }, []);\r\n\r\n  const createSearchParams = (isMovie, isTv) => {\r\n    if (!isMovie && !isTv) return \"\";\r\n    if (isMovie && isTv) return { movie: isMovie, tv: isTv };\r\n    if (isMovie) return { movie: isMovie };\r\n    if (isTv) return { tv: isTv };\r\n  };\r\n\r\n  // Set state new search params\r\n  useEffect(() => {\r\n    const isMovie = getShowMore.includes(\"movie\");\r\n    const isTv = getShowMore.includes(\"tv\");\r\n\r\n    const paramsStr = new URLSearchParams(createSearchParams(isMovie, isTv));\r\n\r\n    history.replace(`${location}?${paramsStr.toString()}`);\r\n  }, [getShowMore]);\r\n\r\n  // Fetching data\r\n  const { data: moviesData, error: moviesError } = useSWR(\r\n    fetchingQuery(moviesQuery),\r\n    fetcher\r\n  );\r\n  const { data: showsData, error: showsError } = useSWR(\r\n    fetchingQuery(showsQuery),\r\n    fetcher\r\n  );\r\n\r\n  // Error handle\r\n  if (!moviesData || !showsData)\r\n    return (\r\n      <PuffLoader color=\"RGB(240, 5, 75)\" css={\"color: white;\"} size={100} />\r\n    );\r\n  if (moviesError || showsError)\r\n    return <h1 style={{ margin: \"auto\" }}>Error!</h1>;\r\n\r\n  // Check for media type\r\n  const checkMediaType = (fetchedData, mediaType) => {\r\n    const hasMediaType = fetchedData.results.hasOwnProperty(\"media_type\");\r\n\r\n    if (!hasMediaType) return addingMediaType(fetchedData.results, mediaType);\r\n\r\n    return fetchedData.results;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle pageTitle={pageTitle} />\r\n\r\n      <MovieListLayout\r\n        data={checkMediaType(moviesData, \"movie\")}\r\n        sectionTitle={\"Movies\"}\r\n        setGetShowMore={setGetShowMore}\r\n        getShowMore={getShowMore}\r\n      />\r\n      <MovieListLayout\r\n        data={checkMediaType(showsData, \"tv\")}\r\n        sectionTitle={\"Tv Shows\"}\r\n        setGetShowMore={setGetShowMore}\r\n        getShowMore={getShowMore}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport MovieList from \"../Layout/MovieList/MovieList\";\r\n\r\nexport default function Trending() {\r\n  const moviesQuery = `trending/movie/day`;\r\n  const showsQuery = `trending/tv/day`;\r\n  const pageTitle = `Trending`;\r\n  return (\r\n    <>\r\n      <MovieList\r\n        moviesQuery={moviesQuery}\r\n        showsQuery={showsQuery}\r\n        pageTitle={pageTitle}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport MovieList from \"../Layout/MovieList/MovieList\";\r\n\r\nexport default function Newest() {\r\n  const moviesQuery = `movie/now_playing`;\r\n  const showsQuery = `tv/airing_today`;\r\n  const pageTitle = `Newest`;\r\n\r\n  return (\r\n    <>\r\n      <MovieList\r\n        moviesQuery={moviesQuery}\r\n        showsQuery={showsQuery}\r\n        pageTitle={pageTitle}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\nimport { GridContainer, GridItem } from \"./Grid\";\r\n\r\nimport { BackToTopBtn } from \"../Buttons\";\r\n\r\n// Spinner\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\n// TODO add \"back to top button\"\r\n\r\nexport default function MoviePagination({ media, setSize, totalResults }) {\r\n  const handleFetchMovies = () => setSize((prev) => prev + 2);\r\n\r\n  const handleHasMore = (tr, ml) => {\r\n    const hasMore = tr === ml ? false : true;\r\n\r\n    return hasMore;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InfiniteScroll\r\n        style={{ paddingTop: \"1rem\", overflowX: \"hidden\" }}\r\n        dataLength={media.length}\r\n        // scrollThreshold={0.6}\r\n        next={handleFetchMovies}\r\n        hasMore={handleHasMore(totalResults, media.length)}\r\n        loader={\r\n          <div style={{ display: \"flex\" }}>\r\n            {\" \"}\r\n            <PulseLoader\r\n              color=\"RGB(240, 5, 75)\"\r\n              css={\"margin: 1rem auto;\"}\r\n              size={10}\r\n            />{\" \"}\r\n          </div>\r\n        }\r\n        endMessage={\r\n          <p\r\n            style={{ display: \"block\", textAlign: \"center\", padding: \"2rem 0\" }}\r\n          >\r\n            <b>You have seen it all</b>\r\n          </p>\r\n        }\r\n      >\r\n        <GridContainer>\r\n          {media.map((movie) => {\r\n            return (\r\n              <GridItem key={movie.id}>\r\n                <MovieCard movie={movie} />\r\n              </GridItem>\r\n            );\r\n          })}\r\n        </GridContainer>\r\n      </InfiniteScroll>\r\n      <BackToTopBtn />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport MoviePagination from \"../Layout/MoviePagination\";\r\nimport addingMediaType from \"../../Utils/addingMediaType\";\r\nimport PageTitle from \"../PageTitle\";\r\n\r\n// Utils\r\nimport { useSWRInfinite } from \"swr\";\r\nimport fetchingQuery, { fetcher } from \"../../Utils/fetchingQuery\";\r\n\r\n// Spinner\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nconst override = css`\r\n  color: white;\r\n  margin: auto;\r\n`;\r\n\r\nexport default function Upcoming() {\r\n  // Change document title\r\n  document.title = \"Upcoming\";\r\n\r\n  // Fetching data\r\n  const moviesQuery = `movie/upcoming`;\r\n\r\n  const {\r\n    data: moviesData,\r\n    error: moviesError,\r\n    isValidating,\r\n    mutate,\r\n    size,\r\n    setSize,\r\n  } = useSWRInfinite(\r\n    (index) => `${fetchingQuery(moviesQuery)}&page=${index + 1}`,\r\n    fetcher\r\n  );\r\n\r\n  if (!moviesData)\r\n    return <PuffLoader color=\"RGB(240, 5, 75)\" css={override} size={100} />;\r\n  if (moviesError)\r\n    return <h1 style={{ margin: \"auto\", color: \"red\" }}>Error!</h1>;\r\n\r\n  function filteringDates() {\r\n    const newMovies = [];\r\n\r\n    const minimumDateMovie = Date.parse(moviesData[0].dates.minimum);\r\n\r\n    moviesData.forEach((obj) =>\r\n      obj.results.forEach(\r\n        (movie) =>\r\n          minimumDateMovie < Date.parse(movie.release_date) &&\r\n          newMovies.push(movie)\r\n      )\r\n    );\r\n\r\n    if (size < 15) return setSize((prev) => prev + 1);\r\n\r\n    return newMovies;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle pageTitle=\"Upcoming\" />\r\n      <MoviePagination\r\n        media={filteringDates()}\r\n        setSize={setSize}\r\n        isValidating={isValidating}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\n\r\n// Utils\r\nimport { useSWRInfinite } from \"swr\";\r\nimport fetchingQuery, { fetcher } from \"../../../Utils/fetchingQuery\";\r\nimport addingMediaType from \"../../../Utils/addingMediaType\";\r\n\r\n// Components\r\nimport MoviePagination from \"../../Layout/MoviePagination\";\r\n// import Filters from \"../../Filters\";\r\nimport PageTitle from \"../../PageTitle\";\r\n\r\n// Spinner\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nconst override = css`\r\n  color: white;\r\n  margin: auto;\r\n`;\r\n\r\nexport default function Discover() {\r\n  // Change document title\r\n  document.title = \"Discover\";\r\n\r\n  const [isMovies, setIsMovies] = useState(true);\r\n  // const [sorting, setSorting] = useState(\"popularity.desc\");\r\n  // const [voteAverage, setVoteAverage] = useState(10);\r\n  // const [yearFilter, setYearFilter] = useState([]);\r\n  // const [genresIds, setGenresIds] = useState([]);\r\n\r\n  const refContainer = useRef([]);\r\n\r\n  const selectGenres = (genres) => {\r\n    const gen = [];\r\n    genres.map((genre) => gen.push(genre.id));\r\n\r\n    return gen.join(\",\");\r\n  };\r\n\r\n  // Fetching data\r\n\r\n  let mediaQuery, filterQuery;\r\n\r\n  if (isMovies) {\r\n    mediaQuery = `discover/movie`;\r\n    filterQuery = `sort_by=popularity.desc&vote_average.lte=&include_adult=false&year=&primary_release_year=&with_genres=`;\r\n  }\r\n\r\n  if (!isMovies) {\r\n    mediaQuery = `discover/tv`;\r\n    filterQuery = `sort_by=popularity.desc&vote_average.lte=&include_adult=false&first_air_date_year=&primary_release_year=&with_genres=`;\r\n  }\r\n\r\n  const { data, error, setSize } = useSWRInfinite(\r\n    (index) => `${fetchingQuery(mediaQuery)}&${filterQuery}&page=${index + 1}`,\r\n    fetcher\r\n  );\r\n\r\n  // Error handle\r\n  if (!data)\r\n    return <PuffLoader color=\"RGB(240, 5, 75)\" css={override} size={100} />;\r\n  if (error) return <h1 style={{ margin: \"auto\", color: \"red\" }}>Error!</h1>;\r\n\r\n  // Mutate data API, injecting \"media type\"\r\n\r\n  const movies = [];\r\n  const tvShows = [];\r\n\r\n  if (isMovies) {\r\n    data.forEach((element) => {\r\n      movies.push(...addingMediaType(element.results, \"movie\"));\r\n    });\r\n  }\r\n\r\n  if (!isMovies) {\r\n    data.forEach((element) => {\r\n      tvShows.push(...addingMediaType(element.results, \"tv\"));\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle pageTitle=\"Discover\" />\r\n      {/* <Filters\r\n        isMovies={isMovies}\r\n        // setIsMovies={setIsMovies}\r\n        // sorting={sorting}\r\n        // setSorting={setSorting}\r\n        // voteAverage={voteAverage}\r\n        // setVoteAverage={setVoteAverage}\r\n        // yearFilter={yearFilter}\r\n        // setYearFilter={setYearFilter}\r\n        // genreIds={genresIds}\r\n        // setGenresIds={setGenresIds}\r\n        // refContainer={refContainer}\r\n      /> */}\r\n      <MoviePagination\r\n        media={isMovies ? movies : tvShows}\r\n        setSize={setSize}\r\n        totalResults={data[0].total_results}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\n// Components\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\nimport PageTitle from \"../PageTitle\";\r\nimport { GridContainer, GridItem } from \"../Layout/Grid\";\r\n\r\n// Context\r\nimport { WatchListContext } from \"../../Context/WatchListContext\";\r\n\r\n// Material-Ui\r\nimport { makeStyles, Grid, Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(15, 1fr)\",\r\n  },\r\n  container: {\r\n    padding: \"0 .5rem\",\r\n    paddingTop: \"1rem\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  btn: {\r\n    width: \"10%\",\r\n    margin: \"0 auto\",\r\n  },\r\n}));\r\n\r\nconst Watchlist = () => {\r\n  // Change document title\r\n  document.title = \"Watch list\";\r\n\r\n  const classes = useStyles();\r\n\r\n  const { list } = useContext(WatchListContext);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle pageTitle=\"Watch list\" />\r\n      {list.length === 0 ? (\r\n        <h2\r\n          style={{\r\n            fontWeight: \"300\",\r\n            margin: \"auto\",\r\n            opacity: \".5\",\r\n          }}\r\n        >\r\n          Nothing here yet\r\n        </h2>\r\n      ) : (\r\n        <GridContainer>\r\n          {list.map((movie, index) => {\r\n            return (\r\n              <GridItem index={index}>\r\n                <MovieCard movie={movie} key={index} />\r\n              </GridItem>\r\n            );\r\n          })}\r\n        </GridContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Watchlist;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// Components\r\nimport MoviePagination from \"../Layout/MoviePagination\";\r\n\r\n// Utils\r\nimport { useSWRInfinite } from \"swr\";\r\nimport fetchingQuery, { fetcher } from \"../../Utils/fetchingQuery\";\r\nimport addingMediaType from \"../../Utils/addingMediaType\";\r\n\r\n// Material-Ui\r\nimport { Typography, Tabs, Tab, useMediaQuery } from \"@material-ui/core\";\r\n\r\n// Spinner\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\n\r\nexport default function Search() {\r\n  const history = useHistory();\r\n\r\n  const mediumBp = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n\r\n  const searchedQuery = new URLSearchParams(history.location.search);\r\n  const query = searchedQuery.get(\"query\");\r\n  const mediaType = searchedQuery.get(\"media_type\");\r\n\r\n  const [tabsValue, setTabsValue] = React.useState(mediaType);\r\n\r\n  useEffect(() => {\r\n    setTabsValue(mediaType);\r\n  }, [mediaType]);\r\n\r\n  const {\r\n    data: movies,\r\n    error: errorMovies,\r\n    setSize: setMoviesSize,\r\n  } = useSWRInfinite(\r\n    (index) =>\r\n      `${fetchingQuery(\r\n        `search/movie`\r\n      )}&include_adult=false&query=${query}&page=${index + 1}`,\r\n    fetcher\r\n  );\r\n\r\n  const {\r\n    data: tvShows,\r\n    error: errorTvShows,\r\n    setSize: setTvShowsSize,\r\n  } = useSWRInfinite(\r\n    (index) =>\r\n      `${fetchingQuery(`search/tv`)}&include_adult=false&query=${query}&page=${\r\n        index + 1\r\n      }`,\r\n    fetcher\r\n  );\r\n\r\n  if (!movies || !tvShows)\r\n    return (\r\n      <PuffLoader color=\"RGB(240, 5, 75)\" css=\"margin: auto;\" size={100} />\r\n    );\r\n  if (errorMovies || errorTvShows) return <h1>Error!</h1>;\r\n\r\n  const totalMoviesResults = movies[0].total_results;\r\n  const totalTvShowsResult = tvShows[0].total_results;\r\n\r\n  const searchedMovieData = [];\r\n  const searchedTvShowsData = [];\r\n\r\n  movies.forEach((element) =>\r\n    searchedMovieData.push(...addingMediaType(element.results, \"movie\"))\r\n  );\r\n  tvShows.forEach((element) =>\r\n    searchedTvShowsData.push(...addingMediaType(element.results, \"tv\"))\r\n  );\r\n\r\n  const tabComp = (tabName, totalResults) => {\r\n    return (\r\n      <h4\r\n        style={{\r\n          display: \"flex\",\r\n          gap: 10,\r\n          fontWeight: 300,\r\n          fontSize: \"1.5rem\",\r\n          textTransform: \"capitalize\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {tabName}:\r\n        <span\r\n          style={{\r\n            fontWeight: 500,\r\n          }}\r\n        >\r\n          {totalResults}\r\n        </span>\r\n      </h4>\r\n    );\r\n  };\r\n\r\n  const handleTabs = (event, tab) => {\r\n    console.log(\"🚀 ~ file: Search.jsx ~ line 101 ~ handleTabs ~ tab\", tab);\r\n    const checkMediaType = !tab ? \"movies\" : \"tv\";\r\n    searchedQuery.set(\"media_type\", checkMediaType);\r\n\r\n    history.push(`search?${searchedQuery.toString()}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {mediumBp && (\r\n        <Typography\r\n          variant=\"h1\"\r\n          style={{ textAlign: \"center\", margin: \"2rem 0\" }}\r\n        >\r\n          Results for: <br />\r\n          {query.toUpperCase()}\r\n        </Typography>\r\n      )}\r\n\r\n      <Tabs\r\n        style={{ margin: \"2rem\" }}\r\n        value={tabsValue === \"movies\" ? 0 : 1}\r\n        onChange={handleTabs}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label={tabComp(\"Movies\", totalMoviesResults)} index={0} />\r\n\r\n        <Tab label={tabComp(\"Tv Shows\", totalTvShowsResult)} index={1} />\r\n      </Tabs>\r\n      {/* </div> */}\r\n      {mediaType === \"movie\" ? (\r\n        <MoviePagination\r\n          value=\"movies\"\r\n          media={searchedMovieData}\r\n          setSize={setMoviesSize}\r\n          totalResults={totalMoviesResults}\r\n        />\r\n      ) : (\r\n        <MoviePagination\r\n          value=\"tv\"\r\n          media={searchedTvShowsData}\r\n          setSize={setTvShowsSize}\r\n          totalResults={totalTvShowsResult}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","export default function formatRuntime(rt) {\r\n  const hour = Math.trunc(rt / 60);\r\n  const minutes = rt % 60;\r\n\r\n  const formatHour = (h) => {\r\n    if (h === 0) return ``;\r\n    if (h === 1) return `0${h} hour`;\r\n    if (h < 10) return `0${h} hours`;\r\n    if (h > 10) return `${h} hours`;\r\n  };\r\n\r\n  const formatMinutes = (m) => {\r\n    if (m === 0) return ``;\r\n    if (m === 1) return `0${m} minute`;\r\n    if (m < 10) return `0${m} minutes`;\r\n    if (m > 10) return `${m} minutes`;\r\n  };\r\n\r\n  return !hour && !minutes\r\n    ? `No info`\r\n    : `${formatHour(hour)} ${formatMinutes(minutes)}`;\r\n}\r\n","import React from \"react\";\r\n\r\n//Material-ui\r\nimport { makeStyles, useMediaQuery, Typography, Grid } from \"@material-ui/core\";\r\n\r\nconst GridContainerTab = ({ children }) => {\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst GridItemTab = ({ children }) => {\r\n  return (\r\n    <Grid item xs={12} md={6} lg={6}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport { GridContainerTab, GridItemTab };\r\n","import React from \"react\";\r\n\r\n//Utils\r\nimport useSWR from \"swr\";\r\nimport fetchingQuery, { fetcher } from \"../../Utils/fetchingQuery\";\r\n\r\n// Components\r\nimport { GridContainerTab, GridItemTab } from \"../Layout/MovieDescriptionTab\";\r\n\r\n//Material-ui\r\nimport {\r\n  makeStyles,\r\n  useMediaQuery,\r\n  Typography,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  poster: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    borderRadius: \"50px\",\r\n  },\r\n\r\n  itemWrapper: {\r\n    maxHeight: \"116px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"hsla(0, 100%, 100%,.2)\",\r\n    padding: \".5rem 1rem\",\r\n  },\r\n  content: {\r\n    alignSelf: \"center\",\r\n    marginLeft: \"2rem\",\r\n  },\r\n  paragraph: {\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"700\",\r\n\r\n    \"& span\": {\r\n      fontSize: \"1.2rem\",\r\n      fontWeight: \"100\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Credits(props) {\r\n  const classes = useStyles();\r\n\r\n  const { id, mediaType } = props;\r\n\r\n  const filterMediaType =\r\n    mediaType === \"movie\" ? `movie/${id}/credits` : `tv/${id}/credits`;\r\n\r\n  // Fetching credits\r\n  const { data: creditsData, error: creditsError } = useSWR(\r\n    fetchingQuery(filterMediaType),\r\n    fetcher\r\n  );\r\n\r\n  if (!creditsData) return <h3>Loading...</h3>;\r\n  if (creditsError) return <h3>Error!</h3>;\r\n  console.log(\r\n    \"🚀 ~ file: Credits.jsx ~ line 15 ~ Credits ~ creditsData\",\r\n    creditsData\r\n  );\r\n\r\n  const checkProfileImg = (profile_path) => {\r\n    const profileImg = profile_path\r\n      ? `https://image.tmdb.org/t/p/original${profile_path}`\r\n      : `https://www.translationvalley.com/wp-content/uploads/2020/03/no-iamge-placeholder.jpg`;\r\n\r\n    return profileImg;\r\n  };\r\n\r\n  return (\r\n    <GridContainerTab>\r\n      {creditsData.cast.map((actor) => (\r\n        <GridItemTab key={actor.id}>\r\n          <div className={classes.itemWrapper}>\r\n            <CardMedia\r\n              className={classes.poster}\r\n              component=\"img\"\r\n              src={checkProfileImg(actor.profile_path)}\r\n              alt={`${actor.name} profile image`}\r\n            />\r\n            <CardContent className={classes.content}>\r\n              <Typography\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n                className={classes.paragraph}\r\n              >\r\n                {actor.name}{\" \"}\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                  {\" \"}\r\n                  as {actor.character}\r\n                </Typography>\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n        </GridItemTab>\r\n      ))}\r\n    </GridContainerTab>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// Utils\r\nimport { useSWRInfinite } from \"swr\";\r\nimport fetchingQuery, { fetcher } from \"../../Utils/fetchingQuery\";\r\n\r\n// Components\r\nimport { GridContainerTab, GridItemTab } from \"../Layout/MovieDescriptionTab\";\r\n\r\n//Material-ui\r\nimport {\r\n  makeStyles,\r\n  useMediaQuery,\r\n  Typography,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  poster: {\r\n    width: \"100px\",\r\n    height: \"150px\",\r\n    // borderRadius: \"50px\",\r\n  },\r\n\r\n  itemWrapper: {\r\n    // maxHeight: \"116px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"hsla(0, 100%, 100%,.2)\",\r\n    padding: \".5rem 1rem\",\r\n  },\r\n  content: {\r\n    alignSelf: \"center\",\r\n    marginLeft: \"2rem\",\r\n  },\r\n  paragraph: {\r\n    color: \"white\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"700\",\r\n\r\n    \"& span\": {\r\n      fontSize: \"1.2rem\",\r\n      fontWeight: \"100\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function RecommendedTitles(props) {\r\n  const { id, mediaType, fromTitle } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const filterMediaType =\r\n    mediaType === \"movie\"\r\n      ? `movie/${id}/recommendations`\r\n      : `tv/${id}/recommendations`;\r\n\r\n  // Fetching credits\r\n  const { data, error, setSize } = useSWRInfinite(\r\n    (index) => `${fetchingQuery(filterMediaType)}&page=${index + 1}`,\r\n    fetcher\r\n  );\r\n\r\n  if (!data) return <h3>Loading...</h3>;\r\n  if (error) return <h3>Error!</h3>;\r\n  console.log(\"🚀 ~ file: Credits.jsx ~ line 15 ~ Credits ~ data\", data);\r\n\r\n  const checkProfileImg = (poster_path) => {\r\n    const posterPath = poster_path\r\n      ? `https://image.tmdb.org/t/p/original${poster_path}`\r\n      : `https://www.translationvalley.com/wp-content/uploads/2020/03/no-iamge-placeholder.jpg`;\r\n\r\n    return posterPath;\r\n  };\r\n\r\n  const handleShowMore = (data) => {\r\n    setSize((prev) => prev + 1);\r\n  };\r\n\r\n  //   const recommendedTitles = [];\r\n\r\n  const totalResults = data[0].total_results;\r\n\r\n  const recommendedTitles = [];\r\n  data.forEach((obj) => recommendedTitles.push(...obj.results));\r\n\r\n  const testLength = totalResults === recommendedTitles.length;\r\n  console.log(\r\n    \"🚀 ~ file: SimilarTitles.jsx ~ line 85 ~ SimilarTitles ~ totalResults\",\r\n    totalResults\r\n  );\r\n  console.log(\r\n    \"🚀 ~ file: SimilarTitles.jsx ~ line 87 ~ SimilarTitles ~ recommendedTitles length\",\r\n    recommendedTitles.length\r\n  );\r\n  console.log(\r\n    \"🚀 ~ file: SimilarTitles.jsx ~ line 91 ~ SimilarTitles ~ testLength\",\r\n    testLength\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <GridContainerTab>\r\n        {recommendedTitles.map((title) => (\r\n          <GridItemTab key={title.id}>\r\n            <Link\r\n              to={`/recommended/from=${fromTitle}/${title.media_type}/${\r\n                title.id\r\n              }/${title.title || title.name}`}\r\n            >\r\n              <div className={classes.itemWrapper}>\r\n                <CardMedia\r\n                  className={classes.poster}\r\n                  component=\"img\"\r\n                  src={checkProfileImg(title.poster_path)}\r\n                  alt={`${title.title} profile image`}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    component=\"p\"\r\n                    className={classes.paragraph}\r\n                  >\r\n                    {title.title || title.name}{\" \"}\r\n                  </Typography>\r\n                </CardContent>\r\n              </div>\r\n            </Link>\r\n          </GridItemTab>\r\n        ))}\r\n      </GridContainerTab>\r\n      {totalResults <= recommendedTitles.length ? (\r\n        <Typography variant=\"h4\" style={{ margin: \"1rem auto\" }}>\r\n          That is it\r\n        </Typography>\r\n      ) : (\r\n        <button\r\n          onClick={() => handleShowMore(data)}\r\n          style={{ width: \"20%\", padding: \".5rem 0\", margin: \"1rem auto\" }}\r\n        >\r\n          Show More\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\n\r\n// Utils\r\nimport formatRuntime from \"../../Utils/formatRuntime\";\r\nimport useSWR from \"swr\";\r\nimport fetchingQuery, { fetcher } from \"../../Utils/fetchingQuery\";\r\nimport addingMediaType from \"../../Utils/addingMediaType\";\r\n\r\n// Components\r\nimport { WatchListBtn } from \"../Buttons\";\r\nimport Credits from \"./Credits\";\r\nimport SimilarTitles from \"./RecommendedTitles\";\r\n\r\n//Material-ui\r\nimport {\r\n  makeStyles,\r\n  useMediaQuery,\r\n  Typography,\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n} from \"@material-ui/core\";\r\n\r\n// Spinner\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nconst override = css`\r\n  color: white;\r\n  margin: auto;\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridItem: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    width: \"100%\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      margin: \"3rem 0\",\r\n    },\r\n  },\r\n  gridItemDetails: {\r\n    minHeight: \"550px\",\r\n  },\r\n  title: {\r\n    fontWeight: 800,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"2.5rem\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n\r\n  genres: {\r\n    fontSize: \"1.5rem\",\r\n    lineHeight: \"1.7\",\r\n    margin: \"1.5rem 0\",\r\n\r\n    fontWeight: 100,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  overview: {\r\n    minHeight: \"7rem\",\r\n    marginTop: \"auto\",\r\n    marginRight: \"2rem\",\r\n    lineHeight: 1.8,\r\n    // columnWidth: \"30rem\",\r\n    columnCount: 2,\r\n    columnFill: \"auto\",\r\n    // columnRule: \"1px inset white\",\r\n    columnGap: \"5ch\",\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      columnCount: 1,\r\n      marginRight: 0,\r\n    },\r\n  },\r\n\r\n  videPlayer: {\r\n    minWidth: \"300px\",\r\n    margin: \"1.5rem auto\",\r\n\r\n    aspectRatio: \"16/9\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      aspectRatio: \"1/1\",\r\n    },\r\n  },\r\n\r\n  tabs: {\r\n    marginBottom: \"1rem\",\r\n    \"& .MuiTabs-flexContainer\": {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  tab: {\r\n    color: \"white\",\r\n    backgroundColor: \"hsla(0,100%,100%, .3)\",\r\n    marginRight: \".5rem\",\r\n  },\r\n}));\r\n\r\nexport default function MovieDetails({\r\n  match: {\r\n    params: { type: mediaType, id },\r\n  },\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  // Tabs Values\r\n  const [tabsValue, setTabsValue] = React.useState(0);\r\n\r\n  // Media query\r\n  const mediumBp = useMediaQuery((theme) => theme.breakpoints.down(\"md\"));\r\n  const smallBp = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n  const filterMediaType = (callType) => {\r\n    if (mediaType === \"movie\") {\r\n      return fetchingQuery(\r\n        `movie/${id}${callType === \"videos\" && `/${callType}`}`\r\n      );\r\n    }\r\n\r\n    if (mediaType === \"tv\") {\r\n      return fetchingQuery(\r\n        `tv/${id}${callType === \"videos\" && `/${callType}`}`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Fetching media details\r\n  const { data: mediaData, error: mediaError } = useSWR(\r\n    filterMediaType(),\r\n    fetcher\r\n  );\r\n\r\n  // Fetching media videos\r\n  const { data: videosData, error: videosError } = useSWR(\r\n    filterMediaType(\"videos\"),\r\n    fetcher\r\n  );\r\n\r\n  if (!mediaData)\r\n    return <PuffLoader color=\"RGB(240, 5, 75)\" css={override} size={100} />;\r\n  if (mediaError) return console.log(mediaError);\r\n\r\n  if (!videosData) return <h1>Loading...</h1>;\r\n  if (videosError) return <h2>Error!</h2>;\r\n\r\n  const {\r\n    original_title,\r\n    overview,\r\n    poster_path,\r\n    backdrop_path,\r\n    release_date,\r\n    runtime,\r\n    vote_average,\r\n    genres,\r\n  } = mediaData;\r\n  console.log(\"🚀 ~ file: MovieDetails.jsx ~ line 143 ~ genres\", genres);\r\n\r\n  const modifiedMediaData = addingMediaType([mediaData], mediaType);\r\n\r\n  const title = mediaData.title || mediaData.name;\r\n\r\n  // Change document title\r\n  document.title = title;\r\n\r\n  const movieBg = `https://image.tmdb.org/t/p/original/${backdrop_path}`;\r\n\r\n  const videos = videosData.results;\r\n\r\n  const makeVideoUrlArr = (v) => {\r\n    let videosURL = [];\r\n\r\n    v.forEach((video) => {\r\n      if (video.type === \"Trailer\" || video.type === \"Teaser\")\r\n        return videosURL.push([`https://www.youtube.com/watch?v=${video.key}`]);\r\n    });\r\n\r\n    return videosURL;\r\n  };\r\n\r\n  const reverseReleaseDate = (date) => {\r\n    const reversedDate = date.split(\"-\").slice(0, 1).reverse().join(\" \");\r\n    return reversedDate;\r\n  };\r\n\r\n  const tabsComponents = [\r\n    <Credits id={id} mediaType={mediaType} />,\r\n    <SimilarTitles id={id} mediaType={mediaType} fromTitle={title} />,\r\n  ];\r\n\r\n  // Handle tabs\r\n  const handleTabs = (e, tab) => {\r\n    e.preventDefault();\r\n    setTabsValue(tab);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          minHeight: \"94vh\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {/* Background container */}\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n            zIndex: -5,\r\n          }}\r\n        >\r\n          {/* Background image */}\r\n          <img\r\n            src={movieBg}\r\n            alt={`${title} poster`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100vh\",\r\n              objectFit: \"cover\",\r\n              objectPosition: \"50% 50%\",\r\n            }}\r\n          />\r\n\r\n          {/* Background overlay */}\r\n          <div\r\n            style={{\r\n              position: \"inherit\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100vh\",\r\n              background:\r\n                \"radial-gradient(circle, rgba(0,54,77,.8) 10% , rgba(0,11,15,0.98) 70%)\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n        {/* End background container */}\r\n\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            lg={9}\r\n            md={8}\r\n            sm={12}\r\n            className={classes.gridItem}\r\n            style={{ minHeight: \"550px\" }}\r\n          >\r\n            <Typography variant=\"h1\" paragraph={true} className={classes.title}>\r\n              {title}\r\n            </Typography>\r\n            <WatchListBtn movie={modifiedMediaData[0]} type=\"large\" />\r\n\r\n            <Typography variant=\"overline\" className={classes.genres}>\r\n              {genres.map((genre) => `${genre.name}  `)}\r\n            </Typography>\r\n\r\n            {mediaType === \"movie\" ? (\r\n              <>\r\n                <Typography variant=\"h5\" paragraph={true}>\r\n                  {reverseReleaseDate(release_date)}\r\n                </Typography>\r\n                <Typography variant=\"h5\" paragraph={true}>\r\n                  {formatRuntime(runtime)}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  paragraph={true}\r\n                  className={classes.overview}\r\n                >\r\n                  {overview}\r\n                </Typography>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Typography variant=\"h5\" paragraph={true}>\r\n                  {mediaData.first_air_date.slice(0, 4)} ~{\" \"}\r\n                  {mediaData.next_episode_to_air\r\n                    ? `next episode: ${mediaData.next_episode_to_air.air_date\r\n                        .split(\"-\")\r\n                        .reverse()\r\n                        .join(\"/\")}`\r\n                    : mediaData.last_air_date.slice(0, 4)}\r\n                </Typography>\r\n                <Typography variant=\"h5\" paragraph={true}>\r\n                  Seasons: {mediaData.number_of_seasons}\r\n                </Typography>\r\n                <Typography variant=\"h5\" paragraph={true}>\r\n                  Total Episodes: {mediaData.number_of_episodes}\r\n                </Typography>\r\n                <Typography variant=\"h5\" paragraph={true}>\r\n                  Runtime per episode:{\" \"}\r\n                  {formatRuntime(mediaData.episode_run_time[0])}\r\n                </Typography>\r\n                <Typography variant=\"h6\" className={classes.overview}>\r\n                  {overview}\r\n                </Typography>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          {!makeVideoUrlArr(videos).length ? (\r\n            \"\"\r\n          ) : (\r\n            <Grid item lg={3} md={4} sm={12} className={classes.gridItem}>\r\n              <Typography variant=\"h2\" style={{ textAlign: \"center\" }}>\r\n                Trailers\r\n              </Typography>\r\n              {makeVideoUrlArr(videos)\r\n                .splice(0, 2)\r\n                .map((url, index) => (\r\n                  <ReactPlayer\r\n                    className={classes.videPlayer}\r\n                    controls\r\n                    width=\"100%\"\r\n                    height={smallBp ? \"13rem\" : \"40%\"}\r\n                    key={index}\r\n                    url={url}\r\n                  />\r\n                ))}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n      <Tabs\r\n        className={classes.tabs}\r\n        value={tabsValue}\r\n        onChange={handleTabs}\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        // orientation=\"vertical\"\r\n        // centered\r\n      >\r\n        <Tab label=\"Cast\" className={classes.tab} />\r\n\r\n        <Tab label=\"Recommended\" className={classes.tab} />\r\n      </Tabs>\r\n      {tabsComponents[tabsValue]}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n// Material-Ui\r\n\r\nimport {\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  MuiThemeProvider,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\n\r\n// React toastify\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n// Components\r\nimport Navigation from \"./Components/Navigation/Navigation\";\r\nimport Filters from \"./Components/Filters\";\r\n\r\n// Pages\r\nimport Trending from \"./Components/Pages/Trending\";\r\nimport Newest from \"./Components/Pages/Newest\";\r\nimport Upcoming from \"./Components/Pages/Upcoming\";\r\nimport Discover from \"./Components/Pages/Discover/Discover\";\r\nimport Watchlist from \"./Components/Pages/Watchlist\";\r\nimport Search from \"./Components/Pages/Search\";\r\nimport MovieDetails from \"./Components/MovieDetails/MovieDetails\";\r\n\r\n// Context\r\nimport WatchListContextProvider from \"./Context/WatchListContext\";\r\n\r\nlet theme = createMuiTheme({\r\n  typography: {\r\n    // Tell Material-UI what's the font-size on the html element is.\r\n    htmlFontSize: 20,\r\n  },\r\n});\r\ntheme = responsiveFontSizes(theme);\r\n\r\n// theme.typography.h5 = {\r\n//   [theme.breakpoints.down(\"md\")]: {\r\n//     fontSize: \"1rem\",\r\n//   },\r\n//   [theme.breakpoints.down(\"sm\")]: {\r\n//     fontSize: \".8rem\",\r\n//   },\r\n// };\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{\r\n        maxWidth: \"100vw\",\r\n        display: \"flex\",\r\n        // overflowX: \"hidden\",\r\n      }}\r\n    >\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2500}\r\n        hideProgressBar={false}\r\n        // newestOnTop={}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        limit={3}\r\n      />\r\n      <MuiThemeProvider theme={theme}>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Navigation />\r\n\r\n          <main\r\n            style={{\r\n              maxWidth: \"100vw\",\r\n              minHeight: \"100vh\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              flexGrow: \"2\",\r\n              padding: \"0 .5rem\",\r\n            }}\r\n          >\r\n            <Switch>\r\n              <WatchListContextProvider>\r\n                <Route exact path=\"/\">\r\n                  <Redirect exact to=\"/trending\" />\r\n                </Route>\r\n                <Route exact path=\"/trending\" component={Trending} />\r\n                <Route exact path=\"/newest\" component={Newest} />\r\n                <Route exact path=\"/upcoming\" component={Upcoming} />\r\n                <Route exact path=\"/discover\">\r\n                  {/* <Filters /> */}\r\n                  <Discover />\r\n                </Route>\r\n                <Route exact path=\"/watchlist\" component={Watchlist} />\r\n\r\n                <Route exact path=\"/search\" component={Search} />\r\n\r\n                <Route\r\n                  exact\r\n                  path={[\r\n                    \"/search/:type/:id/:title\",\r\n                    \"/trending/:type/:id/:title\",\r\n                    \"/newest/:type/:id/:title\",\r\n                    \"/upcoming/:id/:title\",\r\n                    \"/discover/:type/:id/:title\",\r\n                    \"/watchlist/:type/:id/:title\",\r\n                    \"/recommended/:fromTitle/:type/:id/:title\",\r\n                  ]}\r\n                  component={MovieDetails}\r\n                />\r\n              </WatchListContextProvider>\r\n            </Switch>\r\n          </main>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}